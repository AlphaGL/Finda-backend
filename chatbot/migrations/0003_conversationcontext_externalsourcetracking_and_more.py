# Generated by Django 5.2.4 on 2025-07-25 02:43

import cloudinary.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('chatbot', '0002_initial'),
        ('main', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConversationContext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_intent', models.CharField(choices=[('greeting', 'Greeting'), ('browsing', 'Browsing Categories'), ('searching', 'Searching Products/Services'), ('filtering', 'Refining Search'), ('comparing', 'Comparing Options'), ('external_confirm', 'Confirming External Sources'), ('completed', 'Search Completed')], default='greeting', max_length=50)),
                ('questions_asked', models.JSONField(blank=True, default=list)),
                ('preferences_collected', models.JSONField(blank=True, default=dict)),
                ('missing_preferences', models.JSONField(blank=True, default=list)),
                ('last_search_results_internal', models.JSONField(blank=True, default=list)),
                ('last_search_results_external', models.JSONField(blank=True, default=list)),
                ('external_sources_shown', models.BooleanField(default=False)),
                ('bounce_count', models.PositiveIntegerField(default=0)),
                ('refinement_count', models.PositiveIntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalSourceTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_name', models.CharField(max_length=100)),
                ('total_requests', models.PositiveIntegerField(default=0)),
                ('successful_requests', models.PositiveIntegerField(default=0)),
                ('average_response_time_ms', models.FloatField(blank=True, null=True)),
                ('click_through_rate', models.FloatField(default=0.0)),
                ('user_satisfaction_score', models.FloatField(blank=True, null=True)),
                ('last_successful_request', models.DateTimeField(blank=True, null=True)),
                ('consecutive_failures', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('api_endpoint', models.URLField(blank=True, null=True)),
                ('api_key_required', models.BooleanField(default=False)),
                ('rate_limit_per_hour', models.PositiveIntegerField(default=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-user_satisfaction_score', 'source_name'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('helpfulness_rating', models.PositiveIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='How helpful was this response? (1-5)')),
                ('accuracy_rating', models.PositiveIntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='How accurate were the results? (1-5)', null=True)),
                ('response_speed_rating', models.PositiveIntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='How was the response speed? (1-5)', null=True)),
                ('feedback_text', models.TextField(blank=True, null=True)),
                ('issues_reported', models.JSONField(blank=True, default=list, help_text="List of issues: ['wrong_results', 'slow_response', 'unclear_answer', etc.]")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImageAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_width', models.PositiveIntegerField(blank=True, null=True)),
                ('original_height', models.PositiveIntegerField(blank=True, null=True)),
                ('file_size_bytes', models.PositiveIntegerField(blank=True, null=True)),
                ('image_format', models.CharField(blank=True, max_length=20, null=True)),
                ('detected_objects', models.JSONField(blank=True, default=list)),
                ('detected_text', models.TextField(blank=True, null=True)),
                ('dominant_colors', models.JSONField(blank=True, default=list)),
                ('product_category_detected', models.CharField(blank=True, max_length=100, null=True)),
                ('brand_detected', models.CharField(blank=True, max_length=100, null=True)),
                ('product_attributes', models.JSONField(blank=True, default=dict)),
                ('overall_confidence', models.FloatField(blank=True, null=True)),
                ('analysis_engine', models.CharField(choices=[('gemini', 'Google Gemini Vision'), ('gpt4v', 'GPT-4 Vision'), ('azure', 'Azure Computer Vision')], default='gemini', max_length=50)),
                ('processing_time_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('analysis_attempts', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_data', models.JSONField(blank=True, default=dict)),
                ('rank_position', models.PositiveIntegerField()),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('user_clicked', models.BooleanField(default=False)),
                ('user_rating', models.PositiveIntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['rank_position'],
            },
        ),
        migrations.CreateModel(
            name='SearchQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_query', models.TextField()),
                ('processed_query', models.TextField(blank=True, null=True)),
                ('search_type', models.CharField(choices=[('product', 'Product'), ('service', 'Service'), ('mixed', 'Mixed')], default='mixed', max_length=20)),
                ('internal_results_count', models.PositiveIntegerField(default=0)),
                ('external_sources_requested', models.BooleanField(default=False)),
                ('result_clicked', models.BooleanField(default=False)),
                ('user_satisfied', models.BooleanField(blank=True, null=True)),
                ('preferences_used', models.JSONField(blank=True, default=dict)),
                ('response_time_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_categories', models.JSONField(blank=True, default=list)),
                ('preferred_price_range', models.JSONField(blank=True, default=dict)),
                ('preferred_locations', models.JSONField(blank=True, default=list)),
                ('preferred_brands', models.JSONField(blank=True, default=list)),
                ('preferred_language', models.CharField(default='en', max_length=10)),
                ('voice_enabled', models.BooleanField(default=True)),
                ('image_search_enabled', models.BooleanField(default=True)),
                ('external_sources_preference', models.CharField(choices=[('always', 'Always Show'), ('ask', 'Ask Each Time'), ('never', 'Never Show')], default='ask', max_length=20)),
                ('response_style', models.CharField(choices=[('brief', 'Brief and Direct'), ('detailed', 'Detailed and Explanatory'), ('casual', 'Casual and Friendly')], default='casual', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='VoiceMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_duration_seconds', models.FloatField(blank=True, null=True)),
                ('file_size_bytes', models.PositiveIntegerField(blank=True, null=True)),
                ('audio_format', models.CharField(blank=True, max_length=20, null=True)),
                ('sample_rate', models.PositiveIntegerField(blank=True, null=True)),
                ('transcription_engine', models.CharField(choices=[('google', 'Google Speech-to-Text'), ('whisper', 'OpenAI Whisper'), ('azure', 'Azure Speech Services')], default='google', max_length=50)),
                ('transcription_confidence', models.FloatField(blank=True, null=True)),
                ('language_detected', models.CharField(blank=True, max_length=10, null=True)),
                ('processing_time_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('transcription_attempts', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='chatmessage',
            name='user',
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='audio_file',
            field=cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='chat/audio'),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='external_sources_offered',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='image_analysis_data',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='image_file',
            field=cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='chat/images'),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='message_type',
            field=models.CharField(choices=[('text', 'Text Message'), ('voice', 'Voice Message'), ('image', 'Image Message')], default='text', max_length=10),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='preference_data',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='response_time_ms',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='search_results_data',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='transcription_confidence',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='user_feedback',
            field=models.CharField(blank=True, choices=[('helpful', 'Helpful'), ('not_helpful', 'Not Helpful'), ('partial', 'Partially Helpful')], max_length=20, null=True),
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('preference_data', models.JSONField(blank=True, default=dict)),
                ('awaiting_external_confirmation', models.BooleanField(default=False)),
                ('last_search_query', models.TextField(blank=True, null=True)),
                ('last_search_type', models.CharField(blank=True, choices=[('product', 'Product'), ('service', 'Service')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='session',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chatbot.chatsession'),
            preserve_default=False,
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['session', 'timestamp'], name='chatbot_cha_session_488328_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['message_type'], name='chatbot_cha_message_008306_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['timestamp'], name='chatbot_cha_timesta_d01b0b_idx'),
        ),
        migrations.AddField(
            model_name='conversationcontext',
            name='session',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='context', to='chatbot.chatsession'),
        ),
        migrations.AddIndex(
            model_name='externalsourcetracking',
            index=models.Index(fields=['is_active', '-user_satisfaction_score'], name='chatbot_ext_is_acti_3c7835_idx'),
        ),
        migrations.AddIndex(
            model_name='externalsourcetracking',
            index=models.Index(fields=['source_name'], name='chatbot_ext_source__542203_idx'),
        ),
        migrations.AddField(
            model_name='feedbackrating',
            name='chat_message',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_ratings', to='chatbot.chatmessage'),
        ),
        migrations.AddField(
            model_name='feedbackrating',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='imageanalysis',
            name='chat_message',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='image_details', to='chatbot.chatmessage'),
        ),
        migrations.AddField(
            model_name='productsuggestion',
            name='internal_product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ai_suggestions', to='main.products'),
        ),
        migrations.AddField(
            model_name='searchquery',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='search_queries', to='chatbot.chatsession'),
        ),
        migrations.AddField(
            model_name='searchquery',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='search_queries', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productsuggestion',
            name='search_query',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestions', to='chatbot.searchquery'),
        ),
        migrations.AddField(
            model_name='userpreference',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='chat_preferences', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='voicemessage',
            name='chat_message',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='voice_details', to='chatbot.chatmessage'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['user', '-updated_at'], name='chatbot_cha_user_id_52c956_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['is_active'], name='chatbot_cha_is_acti_5622bd_idx'),
        ),
        migrations.AddIndex(
            model_name='feedbackrating',
            index=models.Index(fields=['helpfulness_rating'], name='chatbot_fee_helpful_74290b_idx'),
        ),
        migrations.AddIndex(
            model_name='feedbackrating',
            index=models.Index(fields=['created_at'], name='chatbot_fee_created_a4ca67_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='feedbackrating',
            unique_together={('chat_message', 'user')},
        ),
        migrations.AddIndex(
            model_name='searchquery',
            index=models.Index(fields=['user', '-created_at'], name='chatbot_sea_user_id_f01980_idx'),
        ),
        migrations.AddIndex(
            model_name='searchquery',
            index=models.Index(fields=['search_type'], name='chatbot_sea_search__83901f_idx'),
        ),
        migrations.AddIndex(
            model_name='searchquery',
            index=models.Index(fields=['created_at'], name='chatbot_sea_created_38f588_idx'),
        ),
        migrations.AddIndex(
            model_name='productsuggestion',
            index=models.Index(fields=['search_query', 'rank_position'], name='chatbot_pro_search__403a81_idx'),
        ),
        migrations.AddIndex(
            model_name='productsuggestion',
            index=models.Index(fields=['user_clicked'], name='chatbot_pro_user_cl_a1616a_idx'),
        ),
    ]
