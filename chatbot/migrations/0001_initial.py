# Generated by Django 5.2.4 on 2025-08-12 20:06

import cloudinary.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BotConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.JSONField()),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bot Configuration',
                'verbose_name_plural': 'Bot Configurations',
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('text', 'Text Message'), ('image', 'Image Message'), ('voice', 'Voice Message'), ('file', 'File Upload'), ('system', 'System Message')], default='text', max_length=20)),
                ('sender_type', models.CharField(choices=[('user', 'User'), ('bot', 'Bot'), ('system', 'System')], max_length=20)),
                ('content', models.TextField()),
                ('image', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='chat/images')),
                ('voice_file', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='chat/voice')),
                ('attachment', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='chat/files')),
                ('search_mode', models.CharField(blank=True, choices=[('local', 'Local Database Search'), ('external', 'External Web Search'), ('hybrid', 'Hybrid Search')], max_length=20, null=True)),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('search_results_count', models.PositiveIntegerField(default=0)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('intent_detected', models.CharField(blank=True, max_length=100, null=True)),
                ('entities_extracted', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('ended', 'Ended')], default='active', max_length=20)),
                ('user_preferences', models.JSONField(blank=True, default=dict)),
                ('search_context', models.JSONField(blank=True, default=dict)),
                ('location_context', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='SearchQuery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query_text', models.TextField()),
                ('search_type', models.CharField(choices=[('product', 'Product Search'), ('service', 'Service Search'), ('mixed', 'Mixed Search'), ('general', 'General Query')], max_length=20)),
                ('source_used', models.CharField(choices=[('local_db', 'Local Database'), ('gemini_web', 'Gemini + Web Search'), ('both', 'Both Sources')], max_length=20)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('location_context', models.JSONField(blank=True, default=dict)),
                ('local_results_count', models.PositiveIntegerField(default=0)),
                ('external_results_count', models.PositiveIntegerField(default=0)),
                ('total_results_shown', models.PositiveIntegerField(default=0)),
                ('search_duration', models.FloatField(blank=True, null=True)),
                ('success_rate', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SearchResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('result_type', models.CharField(choices=[('product', 'Product'), ('service', 'Service'), ('external_product', 'External Product'), ('information', 'Information/Answer')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('external_data', models.JSONField(blank=True, default=dict)),
                ('price_info', models.JSONField(blank=True, default=dict)),
                ('location_info', models.JSONField(blank=True, default=dict)),
                ('relevance_score', models.FloatField(default=0.0)),
                ('position', models.PositiveIntegerField()),
                ('click_count', models.PositiveIntegerField(default=0)),
                ('was_clicked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('feedback_type', models.CharField(choices=[('thumbs_up', 'Thumbs Up'), ('thumbs_down', 'Thumbs Down'), ('rating', 'Rating (1-5)'), ('comment', 'Text Feedback')], max_length=20)),
                ('rating', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('accuracy_rating', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('helpfulness_rating', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('speed_rating', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_sessions', models.PositiveIntegerField(default=0)),
                ('total_messages', models.PositiveIntegerField(default=0)),
                ('unique_users', models.PositiveIntegerField(default=0)),
                ('anonymous_users', models.PositiveIntegerField(default=0)),
                ('total_searches', models.PositiveIntegerField(default=0)),
                ('local_searches', models.PositiveIntegerField(default=0)),
                ('external_searches', models.PositiveIntegerField(default=0)),
                ('successful_searches', models.PositiveIntegerField(default=0)),
                ('average_response_time', models.FloatField(default=0.0)),
                ('average_session_duration', models.FloatField(default=0.0)),
                ('positive_feedback', models.PositiveIntegerField(default=0)),
                ('negative_feedback', models.PositiveIntegerField(default=0)),
                ('average_rating', models.FloatField(default=0.0)),
                ('top_search_categories', models.JSONField(blank=True, default=list)),
                ('top_search_terms', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['date'], name='chatbot_cha_date_1d8b35_idx')],
            },
        ),
    ]
